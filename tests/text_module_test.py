from unittest.mock import AsyncMock

from idotmatrix.modules.text import TextModule, TextColorMode, TextMode
from tests import TestBase


class TestTextModule(TestBase):

    async def test_show(self):
        # GIVEN
        connection_manager = AsyncMock()
        under_test = TextModule(
            connection_manager=connection_manager,
        )

        # WHEN
        await under_test.show_text(
            text="HELLO WORLD!",
            font_size=16,
            text_mode=TextMode.MARQUEE,
            speed=95,
            text_color_mode=TextColorMode.WHITE,
            text_color=(255, 0, 0),
            text_bg_color=(0, 20, 0),
            font_path="../fonts/Rain-DRM3.otf",
        )

        # THEN
        connection_manager.send_bytes.assert_awaited_once_with(
            data=bytearray(
                b'N\x03\x03\x00\x00>\x03\x00\x00\xac\xe7\xbd\xf6\x00\x00\x0c\x0c\x00\x00\x01\x01_\x00\xff\x00\x00\x01\x00\x14\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x008\x0e8\x0e8\x0e8\x0e\xf8\x0f\xf8\x0f\xf8\x0f8\x0e8\x0e8\x0e8\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x07\xf0\x07p\x00p\x00\xf0\x07\xf0\x07p\x00p\x00p\x00\xf0\x07\xf0\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00\xf0\x07\xf0\x07\xf0\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00\xf0\x07\xf0\x07\xf0\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x03\xf0\x0f\xf8\x1f8\x1c8\x1c888\x1c8\x1c\xf8\x1f\xf0\x0f\xc0\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8eq\x8eq\xde{\xdc;\xdc;\xfc?\xf8\x1fx\x1ex\x1ex\x0e0\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x03\xf0\x0f\xf8\x1f8\x1c8\x1c888\x1c8\x1c\xf8\x1f\xf0\x0f\xc0\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x01\xf8\x07\xf8\x078\x078\x07\xf8\x07\xf8\x03\xf8\x01\xb8\x03\xb8\x078\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00p\x00\xf0\x07\xf0\x07\xf0\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x01\xf8\x07\xf8\x0f8\x0e8\x1e8\x1c8\x0e8\x0e\xf8\x0f\xf8\x07\xf8\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x80\x01\x00\x00\x80\x01\x80\x01\x80\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
            ),
            response=False,
            chunk_size=None
        )
